{"version":3,"sources":["components/unit-duration/unit-duration-view.js","components/timer/timer-view.js","components/clock/clock-view.js","components/clock/clock-container.js","redux/constants.js","redux/reducers.js","components/clock/clock-redux.js","redux/actions.js","redux/index.js","index.js","components/app/app-view.js"],"names":["React","memo","name","changeDuration","length","className","id","toLocaleUpperCase","slice","onClick","forwardRef","ref","start","timeLeft","phase","handleStartPause","reset","timeIsRunningOut","classes","currentTime","Date","toISOString","substr","timeIsRunningOutClass","toUpperCase","preload","src","rest","breakLength","sessionLength","ClockContainer","props","toggleTimeIsRunningOut","value","setState","playBuzzer","buzzer","play","stopBuzzer","pause","setTimer","startTimer","changePhase","toggleStart","resetTimer","timer","setInterval","diff","newLength","changeBreak","changeSession","changeTimeLeft","clearInterval","state","updateDimensions","width","window","innerWidth","height","innerHeight","addEventListener","this","removeEventListener","PureComponent","INITIAL_STATE","clock","getClock","combineReducers","constants","action","type","newPhase","connect","dispatch","statePhase","stateTimeLeft","time","actions","newTimeLeft","Clock","store","createStore","rootReducer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a6fb7786.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport default React.memo(function UnitDuration({ name, changeDuration, length }) {\r\n  return (\r\n    <div className={'UnitDuration'}>\r\n      <div className={'row flexBlock'}>\r\n        <div id={`${name}-label`}>{`${\r\n          name[0].toLocaleUpperCase() + name.slice(1)\r\n        } Length`}</div>\r\n      </div>\r\n      <div className={'row flexBlock'}>\r\n        <button id={`${name}-decrement`} onClick={() => changeDuration(length, name, -1)}>\r\n          <i className={'fa fa-arrow-down'} />\r\n        </button>\r\n        <div id={`${name}-length`}>{length}</div>\r\n        <button id={`${name}-increment`} onClick={() => changeDuration(length, name, 1)}>\r\n          <i className={'fa fa-arrow-up'} />\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n});\r\n","import React from 'react';\r\n\r\nexport default React.memo(\r\n  React.forwardRef(function Timer(\r\n    { start, timeLeft, phase, handleStartPause, reset, timeIsRunningOut },\r\n    ref,\r\n  ) {\r\n    const classes = !start ? ['fa fa-play fa-2x'] : ['fa fa-pause fa-2x'];\r\n    const currentTime =\r\n      timeLeft !== 60 * 60\r\n        ? new Date(timeLeft * 1000).toISOString().substr(14, 5)\r\n        : '60:00';\r\n    const timeIsRunningOutClass = timeIsRunningOut ? 'timeIsRunningOut' : '';\r\n\r\n    return (\r\n      <div id={'timer'}>\r\n        <div id={'timer-block'}>\r\n          <div className={'flexBlock'}>\r\n            <div id={'timer-label'} className={timeIsRunningOutClass}>\r\n              {phase[0].toUpperCase() + phase.slice(1)}\r\n            </div>\r\n          </div>\r\n          <div className={'flexBlock'}>\r\n            <div id={'time-left'} className={timeIsRunningOutClass}>\r\n              {currentTime}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className={'row flexBlock'}>\r\n          <button id={'start_stop'} onClick={handleStartPause}>\r\n            <i className={classes[0]} />\r\n          </button>\r\n          <button id={'reset'} onClick={reset}>\r\n            <i className={'fa fa-refresh fa-2x'} />\r\n          </button>\r\n        </div>\r\n        <audio id={'beep'} preload={'auto'} src={'https://goo.gl/65cBl1'} ref={ref} />\r\n      </div>\r\n    );\r\n  }),\r\n);\r\n","import React from 'react';\r\nimport UnitDuration from '../unit-duration/index';\r\nimport Timer from '../timer/index';\r\n\r\nexport default React.memo(\r\n  React.forwardRef(function Clock({ classes, ...rest }, ref) {\r\n    return (\r\n      <div className={'container'} id={'clock'}>\r\n        <h1>Pomodoro Clock</h1>\r\n        <div className={classes[0]}>\r\n          <div className={classes[1] + ' flexBlock'}>\r\n            <UnitDuration\r\n              name={'break'}\r\n              length={rest.breakLength}\r\n              changeDuration={rest.changeDuration}\r\n            />\r\n          </div>\r\n          <div className={classes[2] + ' flexBlock'}>\r\n            <UnitDuration\r\n              name={'session'}\r\n              length={rest.sessionLength}\r\n              changeDuration={rest.changeDuration}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className={'row'}>\r\n          <div className={'col'}>\r\n            <Timer\r\n              phase={rest.phase}\r\n              timeLeft={rest.timeLeft}\r\n              start={rest.start}\r\n              handleStartPause={rest.handleStartPause}\r\n              reset={rest.reset}\r\n              timeIsRunningOut={rest.timeIsRunningOut}\r\n              ref={ref}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }),\r\n);\r\n","import React from 'react';\r\nimport Clock from './clock-view';\r\n\r\nclass ClockContainer extends React.PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      width: window.innerWidth,\r\n      height: window.innerHeight,\r\n      timer: null,\r\n      timeIsRunningOut: false,\r\n    };\r\n  }\r\n\r\n  toggleTimeIsRunningOut = (value) => {\r\n    this.setState({ timeIsRunningOut: value });\r\n  };\r\n\r\n  playBuzzer = () => {\r\n    this.buzzer.play();\r\n  };\r\n\r\n  stopBuzzer = () => {\r\n    this.buzzer.pause();\r\n    this.buzzer.currentTime = 0;\r\n  };\r\n\r\n  setTimer = () => {\r\n    const { breakLength, sessionLength, timeLeft, phase } = this.props;\r\n    if (timeLeft >= 1) {\r\n      if (timeLeft <= 61) {\r\n        this.toggleTimeIsRunningOut(true);\r\n      }\r\n      if (timeLeft <= 3) {\r\n        this.playBuzzer();\r\n      }\r\n      this.props.startTimer(timeLeft - 1);\r\n    } else {\r\n      switch (phase) {\r\n        case 'session': {\r\n          this.props.changePhase('break', breakLength * 60);\r\n          break;\r\n        }\r\n        case 'break': {\r\n          this.props.changePhase('session', sessionLength * 60);\r\n          break;\r\n        }\r\n        default: {\r\n          break;\r\n        }\r\n      }\r\n      this.toggleTimeIsRunningOut(false);\r\n    }\r\n  };\r\n\r\n  handleStartPause = () => {\r\n    if (this.props.start) {\r\n      this.props.toggleStart(false);\r\n      this.resetTimer();\r\n    } else {\r\n      this.props.toggleStart(true);\r\n      const timer = setInterval(this.setTimer, 1000);\r\n      this.setState({ timer });\r\n    }\r\n  };\r\n\r\n  changeDuration = (length, name, diff) => {\r\n    const { phase, start } = this.props;\r\n    let newLength = length + diff;\r\n    if (newLength <= 0 || newLength > 60) {\r\n      return;\r\n    }\r\n    if (name === 'break') {\r\n      this.props.changeBreak(newLength);\r\n    } else if (name === 'session') {\r\n      this.props.changeSession(newLength);\r\n    }\r\n    if (!start && name === phase) {\r\n      this.props.changeTimeLeft(newLength * 60);\r\n    }\r\n  };\r\n\r\n  reset = () => {\r\n    this.props.toggleStart(false);\r\n    this.resetTimer();\r\n    this.stopBuzzer();\r\n    this.props.reset();\r\n    this.toggleTimeIsRunningOut(false);\r\n  };\r\n\r\n  resetTimer = () => {\r\n    clearInterval(this.state.timer);\r\n    this.setState({ timer: null });\r\n  };\r\n\r\n  updateDimensions = () => {\r\n    this.setState({ width: window.innerWidth, height: window.innerHeight });\r\n  };\r\n\r\n  componentDidMount() {\r\n    window.addEventListener('resize', this.updateDimensions);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('resize', this.updateDimensions);\r\n    this.resetTimer();\r\n  }\r\n\r\n  render() {\r\n    const classes =\r\n      this.state.width > 358\r\n        ? ['row', 'col justify-content-end', 'col justify-content-start']\r\n        : ['col', 'row', 'row'];\r\n    const { breakLength, sessionLength, phase, timeLeft, start } = this.props;\r\n    const props = { breakLength, sessionLength, phase, timeLeft, start };\r\n\r\n    return (\r\n      <Clock\r\n        classes={classes}\r\n        {...props}\r\n        timeIsRunningOut={this.state.timeIsRunningOut}\r\n        reset={this.reset}\r\n        changeDuration={this.changeDuration}\r\n        handleStartPause={this.handleStartPause}\r\n        ref={(buzzer) => (this.buzzer = buzzer)}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default ClockContainer;\r\n","export const INITIAL_STATE = {\r\n  clock: {\r\n    start: false,\r\n    phase: 'session',\r\n    sessionLength: 25,\r\n    breakLength: 5,\r\n    timeLeft: 1500,\r\n  },\r\n};\r\n\r\nexport const TOGGLE_START = 'TOGGLE_START';\r\nexport const START_TIMER = 'START_TIMER';\r\nexport const CHANGE_BREAK = 'CHANGE_BREAK';\r\nexport const CHANGE_SESSION = 'CHANGE_SESSION';\r\nexport const CHANGE_TIME_LEFT = 'CHANGE_TIME_LEFT';\r\nexport const CHANGE_PHASE = 'CHANGE_PHASE';\r\nexport const RESET = 'RESET';\r\n","import { combineReducers } from 'redux';\r\nimport * as constants from './constants';\r\n\r\nconst clockReducer = (state = constants.INITIAL_STATE.clock, action = {}) => {\r\n  switch (action.type) {\r\n    case constants.TOGGLE_START: {\r\n      const { start } = action;\r\n      return { ...state, start };\r\n    }\r\n\r\n    case constants.START_TIMER: {\r\n      const { timeLeft } = action;\r\n      return { ...state, timeLeft };\r\n    }\r\n\r\n    case constants.CHANGE_BREAK: {\r\n      return { ...state, breakLength: action.newLength };\r\n    }\r\n\r\n    case constants.CHANGE_SESSION: {\r\n      return { ...state, sessionLength: action.newLength };\r\n    }\r\n\r\n    case constants.CHANGE_TIME_LEFT: {\r\n      return { ...state, timeLeft: action.newLength };\r\n    }\r\n\r\n    case constants.CHANGE_PHASE: {\r\n      return { ...state, phase: action.newPhase, timeLeft: action.newLength };\r\n    }\r\n\r\n    case constants.RESET: {\r\n      return { ...constants.INITIAL_STATE.clock };\r\n    }\r\n\r\n    default:\r\n      return { ...state };\r\n  }\r\n};\r\n\r\nexport const getClock = (state) => state.clock;\r\n\r\nexport default combineReducers({ clock: clockReducer });\r\n","import Clock from './clock-container';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../../redux/actions';\r\nimport { getClock } from '../../redux/reducers';\r\n\r\nconst mapStateToProps = (state) => ({\r\n  start: getClock(state).start,\r\n  sessionLength: getClock(state).sessionLength,\r\n  breakLength: getClock(state).breakLength,\r\n  timeLeft: getClock(state).timeLeft,\r\n  phase: getClock(state).phase,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  changePhase: (statePhase, stateTimeLeft) =>\r\n    dispatch(actions.changePhase(statePhase, stateTimeLeft)),\r\n  startTimer: (time) => dispatch(actions.startTimer(time)),\r\n  toggleStart: (start) => dispatch(actions.toggleStart(start)),\r\n  changeBreak: (newLength) => dispatch(actions.changeBreak(newLength)),\r\n  changeSession: (newLength) => dispatch(actions.changeSession(newLength)),\r\n  changeTimeLeft: (newTimeLeft) => dispatch(actions.changeTimeLeft(newTimeLeft)),\r\n  reset: () => dispatch(actions.reset()),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Clock);\r\n","import * as constants from './constants';\r\n\r\nexport const startTimer = (timeLeft) => ({\r\n  type: constants.START_TIMER,\r\n  timeLeft,\r\n});\r\n\r\nexport const toggleStart = (start) => ({\r\n  type: constants.TOGGLE_START,\r\n  start,\r\n});\r\n\r\nexport const changeBreak = (newLength) => ({\r\n  type: constants.CHANGE_BREAK,\r\n  newLength,\r\n});\r\n\r\nexport const changeSession = (newLength) => ({\r\n  type: constants.CHANGE_SESSION,\r\n  newLength,\r\n});\r\n\r\nexport const changeTimeLeft = (newLength) => ({\r\n  type: constants.CHANGE_TIME_LEFT,\r\n  newLength,\r\n});\r\n\r\nexport const changePhase = (newPhase, newLength) => ({\r\n  type: constants.CHANGE_PHASE,\r\n  newPhase,\r\n  newLength,\r\n});\r\n\r\nexport const reset = () => ({\r\n  type: constants.RESET,\r\n});\r\n","import { createStore } from 'redux';\r\nimport rootReducer from './reducers';\r\nimport { INITIAL_STATE } from './constants';\r\n\r\nconst store = createStore(rootReducer, INITIAL_STATE);\r\n\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app/index';\n\nimport { Provider } from 'react-redux';\nimport store from './redux/index';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n","import React from 'react';\r\nimport './app.css';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport Clock from '../clock/index';\r\n\r\nexport default function App() {\r\n  return (\r\n    <div className={'flexBlock'} id={'App'}>\r\n      <Clock />\r\n    </div>\r\n  );\r\n}\r\n"],"sourceRoot":""}